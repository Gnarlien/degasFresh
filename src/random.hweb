@* Random definitions.

% $Id: 33716afbf5a6aab39b169771fb72e904b5d3b149 $

\ID{$Id: 33716afbf5a6aab39b169771fb72e904b5d3b149 $}

@I vector.hweb

@ A random number sequence is idenified by a string tag.

@f rn_decl integer
@f rn_decls integer
@f rn_seed_decl integer
@f single_precision integer

@m rn_args(x) rn_index(x),rn_array(x)[0]

@m rn_dummy(x) rn_index(x),rn_array(x)

@m rn_decl(x) integer rn_index(x);
      real rn_array(x)[0:ran_k-1] @;

@m rn_decls real random;
      external random @;

@m rn_copy(x,y)
      rn_index(y)=rn_index(x);
      do ran_temp=0,ran_k-1;
         rn_array(y)[ran_temp]=rn_array(x)[ran_temp];
      end do @;

@m rn_index(x)  rn_index1(x)	// Accessor routines
@m rn_index1(x)  ran_index_##x
@m rn_array(x)  rn_array1(x)
@m rn_array1(x)  ran_array_##x

@ Length specifications.

@m ran_k 100                    // The size of the batch of random numbers
@m ran_s 8                      // The size of the seed.
@m ran_c 34                     // The size of the decimal version of seed.

@ Inline calling routines.

/* An inline version of |y=random(rn_args(x))| */
@m rn_next(y,x)
      y=random(rn_args(x)) @;

@m rn_init(seed,x) call random_init_d2(seed,rn_args(x)) @;

@m rn_seed_copy(x,y) rn_seed_copy1(x,y)
@m rn_seed_copy1(x,y)
      $DO(I,0,ran_s-1) {
          y[I]=x[I];
      }

@m rn_seed_decl(x)
      integer x[0:ran_s-1] @;

@m rn_seed_args(x)
      x[0]

@m rn_iso_next(v,x)
      call random_isodist(v,1,rn_args(x)) @;

@m rn_cos_next(v,x)
      call random_cosdist(v,1,rn_args(x)) @;

@m rn_gauss_next(y,x)
      call random_gauss(y,1,rn_args(x)) @;
