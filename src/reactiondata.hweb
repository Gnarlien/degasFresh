@* Reaction data definitions.

% $Id: 6db05bfa698a39ee7f7ea2f201f19737c99bcdfd $

\ID{$Id: 6db05bfa698a39ee7f7ea2f201f19737c99bcdfd $}

@I xsection.hweb
@I problem.hweb

@ Data for reactions is held in arrays in common blocks.
|rd_rate(i,j,k,r)| accesses the reaction rate for the $r$th reaction as an 
array with up to 3 dimensions.
``Handling'' (i.e., not reaction rate) data is kept
in the analogous |rd_handling(i,j,k,d,r)| array. The $d$ index denotes the 
$d$th dependent variable for the $r$th reaction.

@m rd_rate(i,j,k,r) reaction_rate_tab[reaction_rate_base[r]+i+reaction_rate_tab_index[r][1]*(j+reaction_rate_tab_index[r][2]*k)]

@m rd_handling(i,j,k,d,r) reaction_handling_tab[reaction_handling_base[r][d]+i+reaction_handling_tab_index[r][d][1]*(j+reaction_handling_tab_index[r][d][2]*k)]

@m rd_data_args(x,subs)
      x##_eval_name##subs,x##_rank##subs,x##_var##subs[1],x##_tab_index##subs[1],x##_spacing##subs[0],x##_min##subs[1],x##_delta##subs[1],x##_tab[x##_base##subs]


@m rd_dep_var_max $EVAL(xs_dep_var_max-1)

@ Variable definitions.

@a
      package_init(rd)

      define_dimen_pk(rd,rd_rank_ind,xs_table_rank_max)
      define_dimen_pk(rd,rd_dep_var_ind,rd_dep_var_max)
      define_dimen_pk(rd,rd_rank_ind0,0,xs_table_rank_max)
      define_dimen_pk(rd,rd_tag_string,xs_tag_string_length)
      define_dimen_pk(rd,rd_eval_string,xs_eval_name_length)

      define_var_pk(rd,reaction_rate_size,INT)
      define_dimen_pk(rd,rd_table_ind,0,reaction_rate_size-1)
      define_var_pk(rd,reaction_handling_size,INT)
      define_dimen_pk(rd,rd_handling_table_ind,0,reaction_handling_size-1)

      define_varp_pk(rd,reaction_rate_min,FLOAT,rd_rank_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_rate_delta,FLOAT,rd_rank_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_rate_rank,INT,problem_reaction_ind)
      define_varp_pk(rd,reaction_rate_spacing,INT,rd_rank_ind0,problem_reaction_ind)
      define_varp_pk(rd,reaction_rate_eval_name,CHAR,rd_eval_string,problem_reaction_ind)
      define_varp_pk(rd,reaction_rate_tab_index,INT,rd_rank_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_rate_var,INT,rd_rank_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_rate_num_rand,INT,problem_reaction_ind)

      define_varp_pk(rd,reaction_rate_base,INT,problem_reaction_ind) 
      define_varp_pk(rd,reaction_rate_tab,FLOAT,rd_table_ind)        
      
      define_varp_pk(rd,reaction_handling_min,FLOAT,rd_rank_ind,rd_dep_var_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_handling_delta,FLOAT,rd_rank_ind,rd_dep_var_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_handling_rank,INT,rd_dep_var_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_handling_spacing,INT,rd_rank_ind0,rd_dep_var_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_handling_eval_name,CHAR,rd_eval_string,rd_dep_var_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_handling_tab_index,INT,rd_rank_ind,rd_dep_var_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_handling_var0,INT,rd_dep_var_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_handling_var,INT,rd_rank_ind,rd_dep_var_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_handling_num_rand,INT,problem_reaction_ind)

      define_varp_pk(rd,reaction_handling_base,INT,rd_dep_var_ind,problem_reaction_ind)
      define_varp_pk(rd,reaction_handling_tab,FLOAT,rd_handling_table_ind)
      package_end(rd)

@ Common blocks definitions.

@f rd_decls integer
@m rd_decls
      integer inc @;

/* The |ragged_alloc| macros are the same as those in 
   |pmidata.hweb|. More detailed documentation is given there. */
@m rd_set_baseinc(x,y,subs)
      x##_base##subs##=x##_size;
      inc=1;
      $DO(I,range_min(ind_##y##_1),range_max(ind_##y##_1)) {
        inc=inc*y##subs##[I];
      }

@m rd_ragged_alloc(x) 
      x##_size=0;
      var_alloc(x##_base);
      call init_base(x##_base,array_size(x##_base)) @;

@m rd_ragged_realloc(x,y,subs)
      rd_set_baseinc(x,y,subs);
      var_realloc(x##_tab,x##_size-1,x##_size-1+inc);
      x##_size=x##_size+inc @;

@m rd_null_alloc(x)
      var_realloc(x##_tab,x##_size-1,x##_size-1+1);
      x##_size=1 @;

@* Reaction data class attribute descriptions.

@ Structures ot hold atomic physics data for the current problem. 
Prefix is |rd|. 

A given reaction within this class is identified
by the integer index |pr_reac| (``problem reaction'') assigned to it during
the problem setup phase.  This class collates the ``cross section'' data
(class |xs|) for all of the reactions in one place for the main code to
use during the run. The reaction data consist of
two very similar subclasses. The first has names which begin with
|reaction_rate|; these arrays are used only to contain the reaction
rate for a particular |pr_reac|.
The second subclass has names starting with |reaction_handling| and is used
for the various data needed to process or handle a particular collision, along
with scoring. The nature
and names of the data objects within the |reaction_handling| array
can vary not only with the reaction, but
with the model used to represent a given reaction.

The representation of the data in memory is crucial to efficiency. Since the
main data tables here are four or five dimensional objects of very ``ragged''
structure, we have opted for an internal representation as single dimensional
arrays. To simplify coding, macros have been developed to simulate the
familiar multi-dimensional array functionality. The downside of this
is the addition of bookkeeping arrays (here, the |xxx_base| arrays),
the unwieldy-ness of the macros themselves, and the difficulty in extracting
data from the 1-D array during debugging or while perusing the netCDF files.
At least this last issue may be addressed by the construction of a small
browser code to allow multi-dimensional netCDF data to be viewed and 
plotted in a straightforward manner. The macros used in |pmidata.hweb| are
very similar to these; an attempt at documenting their operation can be
found in that file.

\begin{description}
  \item[|reaction_rate_size|] Size of the 1-D array for the reaction rates;
set by the macros |rd_ragged_alloc| and |rd_ragged_realloc|.
 
  \item[|reaction_handling_size|] Size of the 1-D array for the handling data;
set by the macros |rd_ragged_alloc| and |rd_ragged_realloc|.

  \item[|reaction_rate_min[pr_reac][i]|] Floating point minimum value of
the |i|th independent variable of the rate for |pr_reac|.

  \item[|reaction_rate_delta[pr_reac][i]|] Floating point increment in
the |i|th independent variable of the rate for |pr_reac|.

  \item[|reaction_rate_rank[pr_reac]|] Integer number of independent
variables in the rate for |pr_reac|.

  \item[|reaction_rate_spacing[pr_reac][i]|] Integer identifying the way
the |i|th variable of the rate (|i| = 0 refers to the
rate itself) are to be interpolated. Examples are
|xs_spacing_linear| and |xs_spacing_log|. Namely, in the latter case the
log of the independent variable (or dependent if |i| = 0) is interpolated
linearly.

  \item[|reaction_rate_eval_name[pr_reac]|] String providing the name
of the function which will be used to evaluate the rate of |pr_reac| 
The only currently implemented option is ``table''; more generally, 
the name of a fitting function would be possible.

  \item[|reaction_rate_tab_index[pr_reac][i]|] Number of values used for
the |i|th independent variable of the rate for |pr_reac|.

  \item[|reaction_rate_var[pr_reac][i]|] Integer identifying the |i|th
independent variable for the rate. The independent variables are typically 
temperature, density, or energy; see |xsection.hweb| for a full list.

  \item[|reaction_rate_num_rand[pr_reac]|] Integer number of uniform
random deviates required to evaluate the rate for |pr_reac| (will usually
be 0 here, however).

  \item[|reaction_rate_base[pr_reac]|] Index in |reaction_rate_tab|
at which the data for the rate of |pr_reac| begins.
This array is set by the macros |rd_ragged_alloc| and |rd_ragged_realloc|.

  \item[|reaction_rate_tab[macro_index]|] is the actual data object which
holds the reaction rate data. As described above, this is a 1-D array of 
size |reaction_rate_size|. These data are normally accessed through the
macro interface |rd_rate| (see below).

  \item[|reaction_handling_min[pr_reac][j][i]|] Floating point minimum value of
the |i|th independent variable for the |j|th dependent variable in |pr_reac|.

  \item[|reaction_handling_delta[pr_reac][j][i]|] Floating point increment in
the |i|th independent variable for the |j|th dependent variable in |pr_reac|.

  \item[|reaction_handling_rank[pr_reac][j]|] Integer number of independent
variables for the |j|th dependent variable in |pr_reac|.

  \item[|reaction_handling_spacing[pr_reac][j][i]|] Integer identifying the way
the |i|th variable for the |j|th dependent variable (|i| = 0 refers to the
dependent variable itself) is to be interpolated. Examples are
|xs_spacing_linear| and |xs_spacing_log|. Namely, in the latter case the
log of the independent variable (or dependent if |i| = 0) is interpolated
linearly.

  \item[|reaction_handling_eval_name[pr_reac][j]|] String providing the name
of the function which will be used to evaluate the data for the |j|th 
dependent variable of |pr_reac|. The only currently implemented
option is ``table''; more generally, the name of a fitting function would 
be possible.

  \item[|reaction_handling_tab_index[pr_reac][j][i]|] Number of values used for
the |i|th independent variable of the |j|th dependent variable for |pr_reac|.

  \item[|reaction_handling_var0[pr_reac][j]|] Integer identifying 
the |j|th dependent variable of 
|pr_reac|. This value is a pointer into the global dependent variable
list |pr_var0_list|.

  \item[|reaction_handling_var[pr_reac][j][i]|] Integer identifying the
|i|th independent variable for the |j|th dependent variable of |pr_reac|. The
independent variables are typically temperature, density, or energy; see
|xsection.hweb| for a full list.

  \item[|reaction_handling_num_rand[pr_reac]|] Integer number of uniform
random deviates required to evaluate all dependent variables of |pr_reac|.
For example, the integral of a distribution may be broken into a number
of equal pieces so that it can be sampled by interpolation with a single
random number. Since the same random number may be needed for more than
one dependent variable (e.g., coupled, multi-dimensional distributions), this
variable contains only the total number of random deviates.

  \item[|reaction_handling_base[pr_reac][j]|] Index in 
|reaction_handling_tab| at which the data for the |j|th dependent variable of 
|pr_reac| begin. This array is set by the macros |rd_ragged_alloc| and
|rd_ragged_realloc|.

  \item[|reaction_handling_tab[macro_index]|] Is the actual data object which
holds the handling data. As described above, this is a 1-D array of size
|reaction_handling_size|. These data are normally accessed through the macro
interface |rd_handling| (see below).
\end{description}

@ Routines using reaction data.

\begin{description}
  \item[|rd_rate(i,j,k,pr_reac)|] Multidimensional accessor function to the
reaction rate data provided for easier use; |i|, |j|, |k| are the independent 
variable indices, 0 $\leq$ |i| $\leq$ |xs_tab_index[pr_reac][1]|-1, etc. 
for the reaction |pr_reac|.

  \item[|rd_handling(i,j,k,d,pr_reac)|] Multidimensional accessor function to 
the handling data provided for easier use; |i|, |j|, |k| are the independent 
variable indices, 0 $\leq$ |i| $\leq$ |xs_tab_index[pr_reac][d][1]|-1, etc. 
for the |d|th dependent variable of reaction |pr_reac|.

  \item[|rd_data_args(x,subs)|] This macro provides an argument list of all of
the |reaction_rate| or |reaction_handling| (use either of these as |x|) arrays
for passing down to a subroutine. The |subs| argument provides the |pr_reac|
array index (both cases) and the dependent variable index for 
|reaction_handling|. E.g., usage might be: 
|rd_data_args(reaction_rate,[pr_reac])| or 
|rd_data_args(reaction_handling,[pr_reac][d])|.

  \item[|rd_ragged_alloc(rd_data)|] Initializes |rd_data_size| and allocates
space for |rd_data_base| (|rd_data| is a root name here, either |reaction_rate|
or |reaction_handling|). This macro needs to do nothing more because the 
reaction data are loaded in one reaction at a time, and the sizes are not 
known a priori.

  \item[|rd_ragged_realloc(rd_data,rd_tab_index,subs)|] Makes changes to size
of one-dimensional data array |rd_data_tab| (|rd_data| is a root name here, 
either |reaction_rate| or |reaction_handling|) based on a revised 
|rd_tab_index|. |subs| provides the |pr_reac| array index (both cases) and 
the dependent variable index for |reaction_handling|. The user must be adding 
to the end of the table for this to work properly.
\end{description}


