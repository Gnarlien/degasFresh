@* Materials definitions.

% $Id: 9e49b8173b8ef2b43608f4a7b19dbb2c2ce50778 $

\ID{$Id: 9e49b8173b8ef2b43608f4a7b19dbb2c2ce50778 $}

@ Information about materials is held in arrays in common blocks.  A
material is identified by an integer indexing into these arrays.

@f ma_decl integer

@m ma_args(x) x

@m ma_dummy(x) x

@m ma_decl(x) integer x @;

@m ma_copy(x,y) y=x @;

@m ma_check(x) (x > 0 && x <= ma_num)

@m ma_name(x) materials_name[x]
@m ma_sy(x)   materials_sy[x]
@m ma_lookup(sy) string_lookup(sy,materials_sy,ma_num)

@ Length specifications.

@m ma_sy_len 8
@m ma_name_len 32

@ Variable definitions.

@a
      package_init(ma)
      define_dimen_pk(ma,materials_symbol_string,ma_sy_len)
      define_dimen_pk(ma,materials_name_string,ma_name_len)
      define_var_pk(ma,ma_num,INT)
      define_dimen_pk(ma,materials_ind,ma_num)

      define_varp_pk(ma,materials_name,CHAR,materials_name_string,materials_ind)
      define_varp_pk(ma,materials_sy,CHAR,materials_symbol_string,materials_ind)
      define_varlocal_pk(ma,materials_version,CHAR,string)
      package_end(ma)

@* Materials class attribute descriptions.

@ Define a material. Prefix is |ma|. 

The identifier |material| is an integer
variable. The properties of the materials are implicitly defined through
the physical behavior of the plasma-material interactions. As a result,
this class is really just an arbitary label; a given instance of the
class is generated only in conjunction with one or more PMI which refer
to it.

\begin{description}
  \item[|ma_name(material)|] Returns the long name (length |ma_name_len|).
  \item[|ma_sy(material)|] Returns the symbolic name (length |ma_sy_len|).
\end{description}

@ Internal variables in the materials class.

\begin{description}
  \item[|ma_num|] Number of material instances.
\end{description}

@ Routines using materials.

|ma_lookup(symbol)| Returns the integer materials number corresponding to
the symbolic name |symbol|.

