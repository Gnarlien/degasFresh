% $Id: 3fe9692076000e5ccc7825e9621858283abcef2c $
\Title{voigtspec}

@* Compute a sample spectrum using the Voigt profile.

\ID{$Id: 3fe9692076000e5ccc7825e9621858283abcef2c $}

@m FILE 'voigtspec.web'

@I macros.hweb
@I string.hweb
@I constants.hweb

@ The main program.

@a
      program voigtspec
      implicit_none_f77
      implicit_none_f90

      integer num_bins,ibin,length,p,b,e        // Local
      real lambda_min,lambda_max,delta_lambda,lambda0,m_i,t_i,
     $     vth,delta_lam_d,density,delta_lam_s,check_tot,
     $     lambda,x,y,signal,check_tot
      character*LINELEN line          

      real voigt                               // External
      external voigt
      
      st_decls

      open(unit=diskout,file='voigtspec.out',status='unknown')

      lambda_min=const(6558.)
      lambda_max=const(6564.)
      num_bins=200
      delta_lambda=(lambda_max-lambda_min)/areal(num_bins)

      lambda0=const(6561.04)   // Deuterium Balmer-$\alpha$
      m_i=3.3443279628e-27     // Deuterium

      write(stdout,*) 'Enter ion temperature (eV): '
      if (! read_string(stdin,line,length)) goto eof
      assert(length<=len(line))
      length=parse_string(line(:length))
      p=0
      assert(next_token(line,b,e,p))
      t_i=electron_charge*read_real(line(b:e)) 

      vth=sqrt(t_i / m_i)
      delta_lam_d=lambda0*vth/speed_of_light
      write(stdout,*) ' Doppler HWHM = ',sqrt(two*log(two))*delta_lam_d
      
      write(stdout,*) 'Enter electron density (m**-3): '
      if (! read_string(stdin,line,length)) goto eof
      assert(length<=len(line))
      length=parse_string(line(:length))
      p=0
      assert(next_token(line,b,e,p))
      density=read_real(line(b:e)) 

      if (density < const(1.,20)) then
         delta_lam_s=const(0.1)*(density/const(1.,20))
      else if (density < const(1.,21)) then
         delta_lam_s=const(0.1)+(const(0.4)/const(9.))*(density/const(1.,20)-one)
      else if (density < const(1.,22)) then
         delta_lam_s=const(0.5)+(const(1.9)/const(9.))*(density/const(1.,21)-one)
      else
         delta_lam_s=const(2.4)
      end if
      write(stdout,*) ' Stark HWHM = ',delta_lam_s

      check_tot=zero
      do ibin=1,num_bins
         lambda=lambda_min+(areal(ibin)-0.5)*delta_lambda
         x=(lambda-lambda0) / (sqrt(two)*delta_lam_d)
         y=delta_lam_s / (sqrt(two)*delta_lam_d)
         signal=voigt(x,y)/(sqrt(two*PI)*delta_lam_d)
         check_tot+=signal*delta_lambda
         write(diskout,*) lambda,signal
      end do
      write(stdout,*) 'Integrated spectrum = ',check_tot

eof:  continue
      close(unit=diskout)
      stop
      end

@* INDEX.
