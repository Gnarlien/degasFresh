% $Id: 8c6d9d1d115b931f5b65faacc426c0d50aa4bfcc $
\Title{sysdeptest}


@* Introduction.

\ID{$Id: 8c6d9d1d115b931f5b65faacc426c0d50aa4bfcc $}

Introduction\ldots

@m FILE 'sysdeptest.web'

@I macros.hweb
@I sysdep.hweb
@I string.hweb

@ The unnamed module.

@a
      @<Functions and Subroutines@>

@* Main program.
      
@<Functions...@>=
      define_dimen(str_dim,8)
      define_dimen(test_dim,n)
      define_varp(x,INT,test_dim)
      define_varp(y,FLOAT,test_dim)
      define_varp(ch,CHAR,str_dim,test_dim)

      program sysdep_test
      implicit_none_f77
      implicit_none_f90
      character ncwd*FILELEN,cwd*FILELEN,user*8,host*20,arg*LINELEN,pathval*LINELEN,date_str*30 // Local
      integer time[8],pid,i,on,n
      declare_varp(x)
      logical res
      declare_varp(y)
      declare_varp(ch)
      real t0,wall
      integer itemp
      real rtemp
      @<Memory allocation interface@>
      st_decls
      sy_decls
@#if 0
      external date_time,get_cwd,get_pid,user_name,host_name // External
      external cpu_time,string_length,arg_count,command_arg
      external mem_alloc,mem_realloc,mem_free
      integer get_pid,string_length,arg_count,mem_alloc,mem_realloc,wall_time
      real cpu_time
@#endif

      t0=cpu_time()
      call date_time(time)
      wall=wall_time(time)
      call date_string(time,date_str)
      pid=get_pid()
      call get_cwd(cwd)
      res = set_cwd('..')
      assert( res )
      call get_cwd(ncwd)
      call user_name(user)
      call host_name(host)
      res = get_env('PATH',pathval)
      write(stdout,'(a,a)') 'Date: ',date_str
      write(stdout,'(a,i5)') 'Pid: ',pid
      write(stdout,'(a,a,1x,i3)') 'CWD: ',trim(cwd),string_length(cwd)
      write(stdout,'(a,a,1x,i3)') 'NCWD: ',trim(ncwd),string_length(ncwd)
      write(stdout,'(a,a,1x,i2)') 'USER: ',trim(user),string_length(user)
      write(stdout,'(a,a,1x,i2)') 'HOST: ',trim(host),string_length(host)
      write(stdout,'(a,a,1x,i3)') 'PATH: ',trim(pathval),string_length(pathval)
      write(stdout,'(a,1x,f13.3)') 'time since 2000: ',wall
      do i=0,arg_count()
         call command_arg(i,arg)
         write(stdout,'(i2,1x,a,1x,i2)') i,trim(arg),string_length(arg)
      end do

      itemp=read_integer('123')
      write(stdout,*) '123',itemp
      rtemp=read_real('123.E0')
      write(stdout,*) '123.E0',rtemp


      n=10
      var_alloc(x)
      call mem_check
      do i=1,n
         x(i)=i
      end do
      on=n
      n=30
      var_realloc(x,on,n)
      do i=1,on
         assert(x(i)==i)
      end do
      do i=on+1,n
         x(i)=i
      end do
      on=n
      n=20
      var_realloc(x,on,n)
      do i=1,n
         assert(x(i)==i)
      end do
      call mem_check
      var_free(x)

      n=10
      var_alloc(y)
      do i=1,n
         y(i)=areal(i)
      end do
      on=n
      n=30
      var_realloc(y,on,n)
      do i=1,on
         assert(y(i)==areal(i))
      end do
      do i=on+1,n
         y(i)=areal(i)
      end do
      on=n
      n=20
      var_realloc(y,on,n)
      do i=1,n
         assert(y(i)==areal(i))
      end do
      var_free(y)

      n=10
      var_alloc(ch)
      do i=1,n
         ch(i)=char(i+ichar('a'))
      end do
      on=n
      n=30
      var_realloc(ch,on,n)
      do i=1,on
         assert(ch(i)==char(i+ichar('a')))
      end do
      do i=on+1,n
         ch(i)=char(i+ichar('a'))
      end do
      on=n
      n=20
      var_realloc(ch,on,n)
      do i=1,n
         assert(ch(i)==char(i+ichar('a')))
      end do
      var_free(ch)
      call mem_check
      write(stdout,'(a,f10.6)') 'CPU: ',cpu_time()-t0
      call date_time(time)
      write(stdout,'(a,f13.3)') 'Elasped: ',wall_time(time)-wall
      call date_string(time,date_str)
      write(stdout,'(a,a)') 'Current time: ',date_str
      stop
      end

@* INDEX.

