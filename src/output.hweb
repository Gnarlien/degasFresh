@* Output definitions.

% $Id: 99b8f4fde408b988c52f72f9f73bc80c106a40d2 $

\ID{$Id: 99b8f4fde408b988c52f72f9f73bc80c106a40d2 $}

@I tally.hweb
@I sources.hweb
@I random.hweb
@I problem.hweb

@ These are the principle output data from DEGAS 2. These are naturally
grouped with the tally data, but aren't needed until the run is
complete. Hence, we have collected them separately here.

@ Indices for moments in the arrays.

@m o_mean 0
@m o_var  1       // variance

@m ou_coupling_mass 1             // Rate of background mass exchange
@m ou_coupling_momentum_1 2       // Rate of background momentum exchange 
@m ou_coupling_momentum_2 3       // (by components)
@m ou_coupling_momentum_3 4
@m ou_coupling_energy 5           // Rate of background energy exchange
@m ou_coupling_max 5

@m ou_back_max 10                 // In lieu of pointer for |pr_background_num|

@m out_index_5(ind,t) ind[1]+tally_tab_index[t][1]*(ind[2]+tally_tab_index[t][2]*(ind[3]+tally_tab_index[t][3]*(ind[4]+tally_tab_index[t][4]*ind[5])))

@m out_array_index(i,ind,t) tally_base[t]+i-1+tally_dep_var_dim[t]*(out_index_5(ind,t))

@ Variable definitions. 

@a
      package_init(ou)

      define_dimen_pk(ou,output_coupling_ind,ou_coupling_max) 
      define_dimen_pk(ou,output_moments_ind,o_mean,o_var)
      define_dimen_pk(ou,ou_back_ind,pr_background_num)

      define_dimen_pk(ou,output_tab_ind,0,tally_size-1)
      define_dimen_pk(ou,output_grps_ind,so_grps)
      define_dimen_pk(ou,output_seed_ind,0,ran_s-1)

      define_var_pk(ou,output_index_1_min,INT)
      define_var_pk(ou,output_index_1_max,INT)
      define_var_pk(ou,output_index_2_min,INT)
      define_var_pk(ou,output_index_2_max,INT)

      define_dimen_pk(ou,output_ind_1,output_index_1_min,output_index_1_max)
      define_dimen_pk(ou,output_ind_2,output_index_2_min,output_index_2_max)

      define_var_pk(ou,output_checkpoint,INT)

      define_varp_pk(ou,output_all,FLOAT,output_moments_ind,output_tab_ind) 
      define_varp_pk(ou,output_grp,FLOAT,output_moments_ind,output_tab_ind,output_grps_ind)

      define_varp_pk(ou,out_post_all,FLOAT,output_moments_ind,output_tab_ind) 
      define_varp_pk(ou,out_post_grp,FLOAT,output_moments_ind,output_tab_ind,output_grps_ind)
      define_varp_pk(ou,output_2D_coupling,FLOAT,output_ind_1,output_ind_2,ou_back_ind,output_coupling_ind,output_grps_ind) 
      define_varp_pk(ou,output_weight_grp,FLOAT,output_grps_ind)
      define_varp_pk(ou,output_num_flights,INT,output_grps_ind)
      define_varp_pk(ou,output_random_seed,INT,output_seed_ind,output_grps_ind)
      define_varlocal_pk(ou,output_version,CHAR,string)
      define_varlocal_pk(ou,output_old_file,INT)

      package_end(ou)

@* Output class attribute descriptions.

@ Definition of the data in the main output file. Prefix is |ou|. 

This class contains various objects needed
to record the results of the DEGAS 2 calculation. Presently, these 
consist of several related large arrays representing components of the
total scores. The existing arrays are explicitly of rank 2 or 3. The
first of these, indicated by |mom_ind| below, is either |o_mean|,
indicating the mean score, or |o_var|, denoting its variance. The
|table_ind| is the compressed single dimension array containing the
ragged, multidimensional scoring data. The |_grp| arrays have a third
index |group_ind| for the source group. 

With the addition of checkpointing and restarting options, the 
|output_grp| array no longer contains relative standard deviations in
the |o_var| index. Rather, its contents remain in the ``raw'' form
which allows them to be read back into the code and used for further
computation during a restart. For convenience, the relative standard
deviations have been copied to the |out_post| arrays, although {\em these
have not been corrected for post-processed additions to the mean
values}. Hence, detailed statistical analyses should be restricted
to the |output_all| and |output_grp| arrays.

Specific data required for the coupling of DEGAS 2 to two dimensional
fluid plasma transport codes are contained in the |output_2D_coupling|
array. The 2-D spatial indices are determined from the |zn_index| 
arrays.

\begin{description}
  \item[|output_checkpoint|] Is |TRUE| when the data in the output
file have been generated from a checkpoint. Output data that have been
post-processed (not from a checkpoint) are indicated by |FALSE|.

  \item[|output_all[mom_ind,table_ind]|] Sum over all source groups of
tallies computed during the DEGAS 2 run.

  \item[|output_grp[mom_ind,table_ind,group_ind]|] Tallies computed during
the DEGAS 2 run for source group |group_ind|.

  \item[|out_post_all[mom_ind,table_ind]|] Sum over all source groups of
all DEGAS 2 tallies, including post-processed contributions.

  \item[|output_grp[mom_ind,table_ind,group_ind]|] All DEGAS 2 tallies
for source group |group_ind|, including post-processed contributions.

  \item[|output_index_1_min|] Minimum of the first index appearing
in the |zn_index| data passed to DEGAS 2.

  \item[|output_index_1_max|] Maximum of the first index appearing
in the |zn_index| data passed to DEGAS 2.

  \item[|output_index_2_min|] Minimum of the second index appearing
in the |zn_index| data passed to DEGAS 2.

  \item[|output_index_2_max|] Maximum of the second index appearing
in the |zn_index| data passed to DEGAS 2.

  \item[|output_2D_coupling[ix,iy,back_ind,cpl_ind,grp_ind]|] The |cpl_ind|th
variable (ion number, momentum component, or energy source) associated with 
background particle |back_ind| in zone |(ix,iy)|, as specified by
|zone_index|, for source group |group_ind|.

  \item[|output_weight_grp[group_ind]|] Total weight of particles flown for
source group |group_ind|.

  \item[|output_num_flights[group_ind]|] Total number of flights flown for
source group |group_ind|.  In most cases, |output_weight_grp| should be
numerically equal to |output_num_flights|.

  \item[|output_random_seed[seed_ind,group_ind]|] Random seed (a seed is a
set of |ran_s| integers, enumerated by |seed_ind|) to be used for source group
|group_ind| if there is a restart. These will all have the same value
(namely, the seed at the end of the run) if gaps have not been left in
the random number sequence (|so_spaced_seeds| = |TRUE|).
\end{description}

@ Routines using output.

Successive attempts have been made at providing a succinct accessor method
to the output arrays. The present approach involves the following macro to
specify the single array index into which all of the tallies and their
dependencies have been compiled:

\begin{description}
  \item[|out_array_index(i,ind,t)|] Index for the |i|th component,
|i| $<$ |tally_dep_var_dim[t]|, of the tally |t| and |ind|,
an array of length |tl_rank_max| containing the indices corresponding
to a particular set of independent variable values (between 0 and 
|tally_tab_index[r,t]|-1 with 1 $\leq$ |r| $\leq$ |tally_rank[t]|).
\end{description}

