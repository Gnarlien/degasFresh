% $Id: 1882e10109a866e18eefe093112d0f5cf930fba4 $
\Title{uedgeback}

@* Plasma set up routine for use with files generated by UEDGE.  This
routine is called by 
{\tt defineback}. The easiest way to compile it into {\tt defineback} is to
copy it to a file named {\tt usr2dplasma.web}:
\begin{verbatim}
cd $HOME/degas2/src
cp uedgeback.web usr2dplasma.web
touch usr2dplasma.web
cd ../SUN
gmake defineback
\end{verbatim}

This routine just instructs {\tt defineback} to use the same routines
as {\tt readbackground} to read the UEDGE file and to set up the background
plasma parameters and recycling sources.  
The simplest input file for {\tt defineback}
would contain just the |plasma_file| keyword, pointing to the same
file that would have been used with {\tt readbackground}.
This permits usage of the revised input options available for UEDGE 
cases in {\tt readbackground}, e.g., specifying plasma parameters in 
the volume between the UEDGE mesh and the material boundaries.  See 
the corresponding documentation in {\tt readbackground}.

By working with {\tt defineback}, however, the user is also able
to specify additional sources.  See the 
documentation at the top of {\tt defineback} for further details.
Note that these sources must be defined after the |plasma_file|
keyword in the input file.  The reason is that this subroutine
automatically defines the plate recycling sources using the
data in the UEDGE file, assuming that these will be the first
source groups.  If the user attempts to define source group prior
to invoking the |plasma_file| keyword, things will go wrong.
If the code is being run in DEBUG mode, an assertion will be hit, although
its error message will not directly point to this ordering problem
as the cause.

\ID{$Id: 1882e10109a866e18eefe093112d0f5cf930fba4 $}

@m FILE 'uedgeback'

@I macros.hweb
@I sysdep.hweb
@I netcdf.hweb
@I background.hweb
@I sources.hweb
@I string.hweb

@ The unnamed module.

@a
      @<Functions and Subroutines@>

@ Compute background densities and temperatures from UEDGE file.

@<Functions...@>=
      subroutine get_n_t(nt_string)

      implicit_none_f77
      so_common                                  // Common
      implicit_none_f90
      character*LINELEN nt_string                // Input
                                               
      integer length,update                      // Local
      character*FILELEN file       

      st_decls
      @<Memory allocation interface@>
/*
   Had hoped to use this test to ensure that |plasma_file| is being
   called before |new_source_group| in {\tt defineback}.  But,
   didn't want to change the interface to this routine.
*/
      if (so_grps > 0) then
         update=TRUE
         so_grps=0
         so_seg_tot=0
      else
         update=FALSE
      end if
      length=len(trim(nt_string))
      assert(length <= FILELEN)
      file=nt_string(:length)
      call read_uedge_background(file,update)

      return
      end

@* INDEX.




