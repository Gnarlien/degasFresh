% $Id: 54e321e7c9d257628bebdb5f8b489af9387783e2 $

\Title{Read old Degas' geometry}


@* Read old Degas' file into common blocks.

@m FILE 'readdegas.web'

@I macros.hweb
@I degas.hweb
@I geomint.hweb

@ The unnamed module.
@f namelist integer

@a
      @<Functions and Subroutines@>

@ Read namelists from a degas input file.  File should be open on |unit|.

@<Functions...@>=
      subroutine inpt(unit,symmetry,xmin,xmax,zmin,zmax)
      implicit_none_f77
      implicit_none_f90
      integer unit,symmetry       // Input
      real xmin,xmax,zmin,zmax    // Output
      integer i,j,k,jh,jv,jt,jsi  // Local
      real xoffset

      @<pardef.h@>
      @<combal.h@>
      @<comst.h@>
      @<comgeo.h@>
      @<compls.h@>
      @<comflg.h@>
      @<comrfl.h@>
      @<comrat.h@>
      @<comsv.h@>
      @<comstat.h@>
      @<compar.h@>

      namelist/input/
     &   cecu,cefe,ceh,ceh2r1,ceh2r2,ceh2r3,ceh21,ceh22,ceh23,cehe,
     &   ch2cx,checx1,checx2,cheh2e,chehee,chehe,chepcx,chpcx,cph2ph2e,
     &   cph2pe,cph2cx,cphphee,crandom,cxengs,deni0,dltvint,engymin,
     &   fictrr0,h2frac,kwrap,lchex,leh0,lflags,lflghe,lflgfe,lflgcu,
     &   lflgar,lflgc,lflgch4,lflgo,lflgh2o,lflgo2,lfnames,lgeomtry,
     &   lhalpha,lmaxwell,lmesh,lnamelst,lneutral,loutput,lplasma,
     &   lprofh,lproft,lprofv,lrandom,lrecycle,lrflct1,lrflct2,
     &   lrrulet,lshrtrun,lsources,lsputter,lstat,lsymetry,lunit,
     &   lvergrid,lvolsrc,lwall,lwalldst,lwerecom,maxerrs,mparts,
     &   ncount,nexit,nhyd,nocols,nocxdets,notvewdv,nohbs,nohzs,
     &   nolambda,norows,nosegsy,nosegsxz,nosplits,notasks,notzs,
     &   novbs,novzs,nowals,nwriter,nptshb,nptskb,nptsvb,nseed,nsegsplt,
     &   ntty,plsang1,plsang,rescale,rmajor,rminor,rrengy,scrrmax,
     &   shethp,sndspd,t0puff,te0,thdtol,ti0,
     &   tviewdir,tviewthh,tviewthv,tviewver,
     &   v0init,vdetors,wtmin0,xcentre,xdetors,xhalamin,xhalamax,
     &   xhaspec1,xhaspec2,xhaspecd,xhaview1,xhaview2,xlen,xplate1,
     &   xplate2,ylen,yplate,zlen,zplate2,zplate1

      namelist/input2/
     &   acpr,achpr,
     &   ch4frac,
     &   ccpcx,cchpcx,cch2pcx,cch3pcx,cch4pcx,
     &   ceccp,
     &   cech1,cech2,cech3,cech4,cechp1,cechp2,cechp3,
     &   cech21,cech22,cech23,cech2p1,cech2p2,cech2p3,cech2p4,
     &   cech31,cech32,cech33,cech3p1,cech3p2,cech3p3,cech3p4,
     &   cech41,cech42,cech43,cech4p1,cech4p2,cech4p3,cech4p4,
     &   ltrail,ltimes,tcolcons

      namelist/arrays/
     &   arcdeg,currxzt,denehvt,denihvt,ficrrhvt,frabsorb,
     &   gridx,gridy,gridz,kplrecyc,ksplzone,
     &   kstart,kstart0,kwmat,kzone1,kzone2,kzone3,lboun1,lboun2,
     &   ndifzone,nwtriint,rflcoef,tehvt,thetawal,
     &   tihvt,twall,vflowx,vflowy,vflowz,
     &   vsorchvt,walltri,xwall,zwall

      read(unit,'(a)')labelrun

 /* Initialize */
      notzs=1
      nptskb=1
      noionsp=1

      read(unit,input)
      if(lflgc.ne.0 .or. lflgch4.gt.0)read(unit,input2)
      read(unit,arrays)


  /* Convert to meters and for offset */
      if (symmetry == geometry_symmetry_cylindrical) then
         xoffset=(rmajor-half*xlen)*const(0.01)
      else if (symmetry == geometry_symmetry_plane || symmetry == geometry_symmetry_oned) then
         xoffset=zero
      else
         assert('Unexpected symmetry value' == ' ')
      end if

      assert(nowals<=npw)
      do i=1,nowals
	assert(nosegsxz[i]+1<=npptsw)
         do j=1,nosegsxz[i]+1
            xwall[j,i]=xoffset+xwall[j,i]*const(0.01)
            zwall[j,i]=zwall[j,i]*const(0.01)
         end do
      end do

      do k=1,nptskb
         do j=1,nptshb
            do i=1,nptsvb
               gridx[i,j,k]=xoffset+gridx[i,j,k]*const(0.01)
               gridz[i,j,k]=gridz[i,j,k]*const(0.01)
            end do
         end do
      end do
      xmin=xoffset
      xmax=xoffset+xlen*const(0.01)
      zmin=zero
      zmax=zlen*const(0.01)

 /* Convert densities */
      do jh=1,nohzs
         do jv=1,novzs
            do jt=1,notzs
               denehvt(jh,jv,jt)=denehvt(jh,jv,jt)*const(1.0,6)
            end do
         end do
      end do

      do jsi=1,noionsp
         do jh=1,nohzs
            do jv=1,novzs
               do jt=1,notzs
                  denihvt(jh,jv,jt,jsi)=denihvt(jh,jv,jt,jsi)*const(1.0,6)
               end do
            end do
         end do
      end do

      return

      end

@* INDEX.
