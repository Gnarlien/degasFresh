% $Id: 1361cff216fcf9f49578bee9ffcd1085451c6ca9 $
\Title{randomtest}


@* A test program for the random number routines.

\ID{$Id: 1361cff216fcf9f49578bee9ffcd1085451c6ca9 $}

This random number generator is portable as long as no bits are lost in
the additions and subtractions in |random_batch|.  As a check, with the
seed is initialized to 31415926535897932, is advanced 23 steps to give
12169046133858735.  Then the zeroth and thousandth random numbers should
be $215019793392575/2^{48} \approx 0.7639037611986588$ and
$259243462334031/2^{48} \approx 0.9210177947737144$.

@m FILE 'randomtest.web'

@i macros.hweb

@I random.hweb

@ The main program.

@a
      program random_test
      implicit_none_f77
      implicit_none_f90
      rn_seed_decl(seed)        // Local
      integer i,k
      real x,start,end
      real xx[0:110000]
      single_precision y,yy[0:110000]
      integer time[8]
      character*(ran_c) dec
      rn_decl(tag)                     // Local for random number routines
      rn_decls
      sy_decls
      single_precision srandom
      external srandom

@#if 0
      call test_prec
      stop
@#endif

      print *, 'Test of random numbers'
      call decimal_to_seed('3.141592653589793238462643383279502',seed) // $\approx \pi$
      call next_seed3(23,-95,110,seed) // Should be 2902248648199272781830143864736810
      call seed_to_decimal(seed,dec)
      print *, 'Seed (2902248648199272781830143864736810) = ',dec
      call random_init_d2(seed,rn_args(tag))

/* Write out the zeroth random number */
      rn_next(x,tag)            // $76050879255612.5/2^{47} \approx 0.54037399803243957308$
      print '(a,f17.15)', 'Zeroth number (0.540373998032440) = ',x

      do i=1,1234
         rn_next(x,tag)
      end do
/* 1234th number $67313725517242.5/2^{47} \approx 0.99479659867599323775$ */
      print '(a,f17.15)', '1234th number (0.478292786832260) = ',x
         
      call random_init_d2(seed,rn_args(tag))
      call random_array(xx,1234+1,rn_args(tag))
      
      print '(a,f17.15)', 'Zeroth number (0.540373998032440) = ',xx[0]
      print '(a,f17.15)', '1234th number (0.478292786832260) = ',xx[1234]
      
      call random_init_d2(seed,rn_args(tag))
/* Write out the zeroth random number */
      y=srandom(rn_args(tag))            // $76050879255612.5/2^{47} \approx 0.54037399803243957308$
      print '(a,f10.8)', 'Zeroth number (0.54037398) = ',y

      do i=1,1234
         y=srandom(rn_args(tag))
      end do
/* 1234th number $67313725517242.5/2^{47} \approx 0.99479659867599323775$ */
      print '(a,f10.8)', '1234th number (0.47829276) = ',y

      call random_init_d2(seed,rn_args(tag))
      call srandom_array(yy,1234+1,rn_args(tag))
      
      print '(a,f10.8)', 'Zeroth number (0.54037398) = ',yy[0]
      print '(a,f10.8)', '1234th number (0.47829276) = ',yy[1234]
      
      
      call next_seed3(-23,95,-110,seed) // Should be 3141592653589793238462643383279502
      call seed_to_decimal(seed,dec)
      print *, 'Seed (3141592653589793238462643383279502) = ',dec

      call date_time(time)
      call set_random_seed(time,seed)
      call seed_to_decimal(seed,dec)
      print *, 'Random seed (based on current time) = ',dec
      call date_string(time,dec)
      print *, 'The current time = ',dec(1:30)

      /* Timing tests */
      start=cpu_time()
      do i=1,10000
         call next_seed(1,seed)
      end do
      end=cpu_time()
      print *, 'Time of next_seed =',(end-start)/10000

      start=cpu_time()
      do i=1,10000
         call next_seed(312,seed)
      end do
      end=cpu_time()
      print *, 'Time of 312 * next_seed =',(end-start)/10000

      start=cpu_time()
      do i=1,10000
         call random_init_d2(seed,rn_args(tag))
      end do
      end=cpu_time()
      print *, 'Time of random_init_d2 =',(end-start)/10000

      start=cpu_time()
      do k=1,100
         do i=1,100000
            xx[i]=random(rn_args(tag))
         end do
      end do
      end=cpu_time()
      print *, 'Time of random =',(end-start)/100000/100

      start=cpu_time()
      do k=1,100
         call random_array(xx,100000,rn_args(tag))
      end do
      end=cpu_time()
      print *, 'Time of random_array =',(end-start)/100000/100

@#if 0
      call new_test
@#endif

@#if FORTRAN90
      call random_seed(size=k)
      print *, 'seed size for random_number =',k
      start=cpu_time()
      do k=1,100
         call random_number(xx[0:99999])
      end do
      end=cpu_time()
      print *, 'Time of random_number (fast) =',(end-start)/100000/100

      start=cpu_time()
      do k=1,100
         do i=1,100000
            call random_number(xx[i])
         end do
      end do
      end=cpu_time()
      print *, 'Time of random_number =',(end-start)/100000/100
@#endif

@#if 0
      call test_string
@#endif
      stop
      end

      subroutine test_string
      implicit_none_f77
      implicit_none_f90
      logical read_string
      character*(80) line
      character*(ran_c) res
      rn_seed_decl(seed)
      integer length

loop: continue
      if (read_string(stdin,line,length)) then
         call decimal_to_seed(line(1:length),seed)
         call seed_to_decimal(seed,res)
         print *, res,' X ',seed
         call string_to_seed(line(1:length),seed)
         call seed_to_decimal(seed,res)
         print *, res,' X ',seed
         goto loop
      end if
      return
      end

      subroutine new_test
      implicit_none_f77
      implicit_none_f90
      real x[0:1100-1]
      real ulp,start,end,tmp
      integer i
      sy_decls

      ulp=half^47
      x[0]=zero
      x[1]=ulp
      do i=2,99
         tmp=x[i-1]+x[i-2]
         x[i]=tmp-int(tmp)
      end do
      start=cpu_time()
      do i=1,10000
         call exercise1(x)
      end do
      end=cpu_time()
c     print *, '1000th number = ', x[1100-1]
      print *, 'Time of new test1 =',(end-start)*const(1.0,-4)*const(1.0,-3)
      start=cpu_time()
      do i=1,10000
         call exercise2(x)
      end do
      end=cpu_time()
c     print *, '1000th number = ', x[1100-1]
      print *, 'Time of new test2 =',(end-start)*const(1.0,-4)*const(1.0,-3)
      start=cpu_time()
      do i=1,10000
         call exercise3(x)
      end do
      end=cpu_time()
c     print *, '1000th number = ', x[1100-1]
      print *, 'Time of new test3 =',(end-start)*const(1.0,-4)*const(1.0,-3)
      start=cpu_time()
      do i=1,10000
         call exercise4(x)
      end do
      end=cpu_time()
c     print *, '1000th number = ', x[1100-1]
      print *, 'Time of new test4 =',(end-start)*const(1.0,-4)*const(1.0,-3)
      start=cpu_time()
      do i=1,10000
         call exercise5(x)
      end do
      end=cpu_time()
c     print *, '1000th number = ', x[1100-1]
      print *, 'Time of new test5 =',(end-start)*const(1.0,-4)*const(1.0,-3)
      start=cpu_time()
      do i=1,10000
         call exercise6(x)
      end do
      end=cpu_time()
c     print *, '1000th number = ', x[1100-1]
      print *, 'Time of new test6 =',(end-start)*const(1.0,-4)*const(1.0,-3)

      return
      end

      subroutine exercise1(x)
      implicit_none_f77
      implicit_none_f90
      real x[0:1100-1],tmp
      integer i
      do i=100,1100-1
         tmp=x[i-100]+x[i-63]
         x[i]=tmp-int(tmp)
      end do
      return
      end

      subroutine exercise2(x)
      implicit_none_f77
      implicit_none_f90
      real x[0:1100-1],tmp
      integer i
      do i=100,1100-1
         tmp=x[i-100]+x[i-63]
         if (tmp>=one) then
            x[i]=tmp-one
         else
            x[i]=tmp
         end if
      end do
      return
      end

      subroutine exercise3(x)
      implicit_none_f77
      implicit_none_f90
      real x[0:1100-1],tmp
      integer i
      do i=100,1100-1
         tmp=x[i-100]-x[i-63]
         if (tmp<zero) then
            x[i]=tmp+one
         else
            x[i]=tmp
         end if
      end do
      return
      end

      subroutine exercise4(x)
      implicit_none_f77
      implicit_none_f90
      real x[0:1100-1],tmp
      integer i
      do i=100,1100-1
         tmp=x[i-100]+x[i-37]
         x[i]=tmp-int(tmp)
      end do
      return
      end

      subroutine exercise5(x)
      implicit_none_f77
      implicit_none_f90
      real x[0:1100-1],tmp
      integer i
      do i=100,1100-1
         tmp=x[i-100]+x[i-37]
         if (tmp>=one) then
            x[i]=tmp-one
         else
            x[i]=tmp
         end if
      end do
      return
      end

      subroutine exercise6(x)
      implicit_none_f77
      implicit_none_f90
      real x[0:1100-1],tmp
      integer i
      do i=100,1100-1
         tmp=x[i-100]-x[i-37]
         if (tmp<zero) then
            x[i]=tmp+one
         else
            x[i]=tmp
         end if
      end do
      return
      end

      subroutine test_prec
      implicit_none_f77
      implicit_none_f90
      real x,y,z,ulp,eps
      integer i
      
      do i=46,54
         ulp=half**i
         eps=ulp*half
         x=half-eps
         y=half-ulp
         call dummy(x)
         y=y+x
         x=half+x
         call dummy(x)
         z=(x-eps)+(y-eps)
         z=(z-int(z))+eps
         z=z-1
         if (z != - 3*ulp + eps) then
            print *, 'eps', i
         end if
         y=x
         call dummy(x)
         z=(x-eps)+(y-eps)
         z=(z-int(z))+eps
         z=z-1
         if (z != - 2*ulp + eps) then
            print *, 'eps', i
         end if

         x=half-ulp
         y=half-2*ulp
         call dummy(x)
         call dummy(y)
         y=half+y
         x=half+x
         call dummy(x)
         z=x+y
         z=z-int(z)-1
         if (z != - 3*ulp) then
            print *, 'noeps1', i
         end if

         y=x
         call dummy(x)
         z=x+y
         z=z-int(z)-1
         if (z != - 2*ulp) then
            print *, 'noeps2', i
         end if

      end do
      return
      end
      
      subroutine dummy(x)
      implicit_none_f77
      implicit_none_f90
      real x
      return
      end

@* Timing results.

OLD ROUTINES

tern (NAG f90)
\begin{verbatim}
 Test of random numbers
 Seed (31415926535897932) = 31415926535897932
 Seed (12169046133858735) = 12169046133858735
 Zeroth number (0.7639037611986588) =    0.7639037611986588
 1000th number (0.9210177947737144) =    0.9210177947737144
 Seed (31415926535897932) = 31415926535897932
 Random seed (based on time and pid) = 19990630123458587
 Time of next_seed =  0.0000000000000000E+000
 Time of 312 * next_seed =   7.9999999999999996E-06
 Time of random_init_d2 =   5.0000000000000002E-05
 Time of rn_fast_next =   1.1394986206069330E-07
 Time of rn_next =   1.1199999999999997E-07
 Time of random =   2.2999999999999999E-07
 Time of random_array =   1.1000000000000006E-07
 Time of new test1 =   1.9499999999999993E-07
 Time of new test2 =   6.4999999999999947E-08
 Time of new test3 =   6.6999999999999991E-08
 Time of new test4 =   1.9600000000000009E-07
 Time of new test5 =   6.6999999999999991E-08
 Time of new test6 =   6.8999999999999956E-08
 seed size for random_number = 1
 Time of random_number (fast) =   2.7900000000000010E-07
 Time of random_number =   2.6500000000000006E-07
\end{verbatim}

tern (PGI f90)
\begin{verbatim}
 Test of random numbers
 Seed (31415926535897932) = 31415926535897932
 Seed (12169046133858735) = 12169046133858735
 Zeroth number (0.7639037611986588) =   0.7639037611986588     
 1000th number (0.9210177947737144) =   0.9210177947737144     
 Seed (31415926535897932) = 31415926535897932
 Random seed (based on time and pid) = 19990630130230000
 Time of next_seed =  0.0000000000000000E+000
 Time of 312 * next_seed =  1.0000000000000001E-005
 Time of random_init_d2 =  4.0000000000000010E-005
 Time of rn_fast_next =  8.5962176642277399E-008
 Time of rn_next =  8.4999999999999980E-008
 Time of random =  1.4000000000000001E-007
 Time of random_array =  8.5999999999999989E-008
 Time of new test1 =  1.3899999999999999E-007
 Time of new test2 =  4.0000000000000041E-008
 Time of new test3 =  3.8999999999999972E-008
 Time of new test4 =  1.4100000000000003E-007
 Time of new test5 =  3.7999999999999990E-008
 Time of new test6 =  3.8000000000000082E-008
 seed size for random_number =          34
 Time of random_number (fast) =  7.8999999999999913E-008
 Time of random_number =  1.1699999999999999E-007
\end{verbatim}

cucaracha (f77)
\begin{verbatim}
 Test of random numbers
 Seed (31415926535897932) = 31415926535897932
 Seed (12169046133858735) = 12169046133858735
 Zeroth number (0.7639037611986588) =    0.76390376119866
 1000th number (0.9210177947737144) =    0.92101779477371
 Seed (31415926535897932) = 31415926535897932
 Random seed (based on time and pid) = 19990630123456853
 Time of next_seed =    4.8947930335999D-07
 Time of 312 * next_seed =    8.9677033945918D-06
 Time of random_init_d2 =    5.1132746040821D-05
 Time of rn_fast_next =    6.8783227737526D-08
 Time of rn_next =    7.1553325653076D-08
 Time of random =    1.1888326406479D-07
 Time of random_array =    6.5689778327942D-08
 Time of new test1 =    1.1150932312012D-08
 Time of new test2 =    3.1736636161804D-08
 Time of new test3 =    3.4729933738709D-08
 Time of new test4 =    1.1230564117432D-08
 Time of new test5 =    3.4246873855591D-08
 Time of new test6 =    4.9849987030029D-08
 Note: Nonstandard floating-point mode enabled 
\end{verbatim}

mars (f77)
\begin{verbatim}
 Test of random numbers
 Seed (31415926535897932) = 31415926535897932
 Seed (12169046133858735) = 12169046133858735
 Zeroth number (0.7639037611986588) =   0.763903761198659     
 1000th number (0.9210177947737144) =   0.921017794773714     
 Seed (31415926535897932) = 31415926535897932
 Random seed (based on time and pid) = 19990630123537894
 Time of next_seed =  3.903999924659729E-007
 Time of 312 * next_seed =  8.393599838018417E-006
 Time of random_init_d2 =  4.001599550247192E-005
 Time of rn_fast_next =  6.272919980363670E-008
 Time of rn_next =  7.622560262680054E-008
 Time of random =  9.730719327926635E-008
 Time of random_array =  6.002399921417237E-008
 Time of new test1 =  1.883680820465088E-008
 Time of new test2 =  3.816158771514893E-008
 Time of new test3 =  3.171997070312501E-008
 Time of new test4 =  1.805601119995117E-008
 Time of new test5 =  3.913764953613281E-008
 Time of new test6 =  3.181757926940919E-008
\end{verbatim}

mcurie (f90)
\begin{verbatim}
 Test of random numbers
 Seed (31415926535897932) = 31415926535897932
 Seed (12169046133858735) = 12169046133858735
 Zeroth number (0.7639037611986588) =  0.76390376119865877
 1000th number (0.9210177947737144) =  0.92101779477371437
 Seed (31415926535897932) = 31415926535897932
 Random seed (based on time and pid) = 19990630093552797
 Time of next_seed = 8.19372013211250289E-7
 Time of 312 * next_seed = 1.33477754890918733E-5
 Time of random_init_d2 = 6.28394782543182409E-5
 Time of rn_fast_next = 8.69436254696187999E-8
 Time of rn_next = 9.04150247573852569E-8
 Time of random = 1.6621154546737671E-7
 Time of random_array = 8.38220834732055748E-8
 Time of new test1 = 9.60323810577392598E-8
 Time of new test2 = 4.47386741638183655E-8
 Time of new test3 = 3.61535549163818416E-8
 Time of new test4 = 9.62842941284179751E-8
 Time of new test5 = 4.56136226654052797E-8
 Time of new test6 = 3.65771770477294967E-8
 seed size for random_number = 1
 Time of random_number (fast) = 2.69600868225097673E-8
 Time of random_number = 3.44620704650878881E-8
\end{verbatim}

killeen (f90)
\begin{verbatim}
 Test of random numbers
 Seed (31415926535897932) = 31415926535897932
 Seed (12169046133858735) = 12169046133858735
 Zeroth number (0.7639037611986588) =  0.7639037611986588
 1000th number (0.9210177947737144) =  0.9210177947737144
 Seed (31415926535897932) = 31415926535897932
 Random seed (based on time and pid) = 19990630093527395
 Time of next_seed = 1.496593900000001E-5
 Time of 312 * next_seed = 2.587678940000007E-4
 Time of random_init_d2 = 2.049927500000015E-4
 Time of rn_fast_next = 1.885090490184298E-7
 Time of rn_next = 7.327512470000015E-7
 Time of random = 2.371795152000011E-6
 Time of random_array = 1.584439770000006E-7
 Time of new test1 = 5.900799600001395E-8
 Time of new test2 = 8.132775900000971E-8
 Time of new test3 = 7.057420799999348E-8
 Time of new test4 = 7.245811100001432E-8
 Time of new test5 = 1.082251030000179E-7
 Time of new test6 = 9.551246200001045E-8
 seed size for random_number = 1
 Time of random_number (fast) = 6.868979999999251E-8
 Time of random_number = 5.860128599999805E-8
\end{verbatim}

hecate
\begin{verbatim}
 Test of random numbers
 Seed (31415926535897932) = 31415926535897932
 Seed (12169046133858735) = 12169046133858735
 Zeroth number (0.7639037611986588) =  0.76390376119865877
 1000th number (0.9210177947737144) =  0.92101779477371437
 Seed (31415926535897932) = 31415926535897932
 Random seed (based on time and pid) = 19990630123529278
 Time of next_seed = 9.14699956774711637E-7
 Time of 312 * next_seed = 1.48550003767013549E-5
 Time of random_init_d2 = 4.94779944419860811E-5
 Time of rn_fast_next = 6.1700354785979438E-8
 Time of rn_next = 6.69866979122161847E-8
 Time of random = 1.3371320962905883E-7
 Time of random_array = 5.56774854660034232E-8
 Time of new test1 = 2.23670005798339864E-8
 Time of new test2 = 1.75664186477661146E-8
 Time of new test3 = 1.7315101623535157E-8
 Time of new test4 = 2.2088718414306641E-8
 Time of new test5 = 1.82969093322753906E-8
 Time of new test6 = 1.7398071289062501E-8
 seed size for random_number = 64
 Time of random_number (fast) = 1.38803100585937497E-7
 Time of random_number = 1.38748502731323258E-7
\end{verbatim}

Summary
hecate, mcurie, mars, tern (nag+pgi) doesn't care about lag (63 vs 37)
killeen, cucaracha prefer a lag of 63

hecate, mcurie, tern (nag+pgi) prefer if (by factors of 1.3, 2.2 [2.6 for subtract], 3.0 3.5)
killeen, mars, cucaracha, prefer int (by factors of 1.4, 2.0, 2.8)

NEW ROUTINES
cucaracha (-fast)
\begin{verbatim}
 Test of random numbers
 Seed (2902248648199272781830143864736810) = 2902248648199272781830143864736810
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.54037398) = 0.54037398
1234th number (0.47829276) = 0.47829276
Zeroth number (0.54037398) = 0.54037398
1234th number (0.47829276) = 0.47829276
 Seed (3141592653589793238462643383279502) = 3141592653589793238462643383279502
 Random seed (based on current time) =              199908091240110525199
 The current time = 1999-08-09 11:05:25.199 -04:00
 Time of next_seed =    2.1943079307675D-06
 Time of 312 * next_seed =    4.0132778882980D-05
 Time of random_init_d2 =    8.0928206443787D-05
 Time of random =    2.1702294349670D-07
 Time of random_array =    1.2327103614807D-07
\end{verbatim}


tern NAG f90 (-O)
\begin{verbatim}
 Test of random numbers
 Seed (2902248648199272781830143864736810) = 2902248648199272781830143864736810
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.54037398) = 0.54037398
1234th number (0.47829276) = 0.47829276
Zeroth number (0.54037398) = 0.54037398
1234th number (0.47829276) = 0.47829276
 Seed (3141592653589793238462643383279502) = 3141592653589793238462643383279502
 Random seed (based on current time) =              199908091240110747000
 The current time = 1999-08-09 11:07:47.000  -4:00
 Time of next_seed =   9.9999999999999995E-07
 Time of 312 * next_seed =   2.8000000000000000E-05
 Time of random_init_d2 =   6.4999999999999994E-05
 Time of random =   7.3099999999999997E-07
 Time of random_array =   8.8900000000000009E-07
 seed size for random_number = 1
 Time of random_number (fast) =   2.7699999999999995E-07
 Time of random_number =   2.7300000000000002E-07
\end{verbatim}

mars f90 (-O4)
\begin{verbatim}
 Test of random numbers
 Seed (2902248648199272781830143864736810) = 2902248648199272781830143864736810
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.54037398) = 0.54037398
1234th number (0.47829276) = 0.47829276
Zeroth number (0.54037398) = 0.54037398
1234th number (0.47829276) = 0.47829276
 Seed (3141592653589793238462643383279502) = 3141592653589793238462643383279502
 Random seed (based on current time) =              199908091240110613450
 The current time = 1999-08-09 11:06:13.450 -04:00
 Time of next_seed =  1.561599969863892E-006
 Time of 312 * next_seed =  2.488799951970577E-005
 Time of random_init_d2 =  4.411520063877106E-005
 Time of random =  3.000224053859710E-007
 Time of random_array =  2.561023950576782E-007
 seed size for random_number =           2
 Time of random_number (fast) =  3.916687965393067E-007
 Time of random_number =  3.916687965393067E-007
\end{verbatim}

hecate (with 50% faster processors) (-O3)
\begin{verbatim}
 Test of random numbers
 Test of random numbers
 Seed (2902248648199272781830143864736810) = 2902248648199272781830143864736810
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.54037398) = 0.54037398
1234th number (0.47829276) = 0.47829276
Zeroth number (0.54037398) = 0.54037398
1234th number (0.47829276) = 0.47829276
 Seed (3141592653589793238462643383279502) = 3141592653589793238462643383279502
 Random seed (based on current time) =              199908091240110547378
 The current time = 1999-08-09 11:05:47.378 -04:00
 Time of next_seed = 1.47429984062910076E-6
 Time of 312 * next_seed = 2.49766983091831215E-5
 Time of random_init_d2 = 9.69102054834365868E-5
 Time of random = 1.58172297477722176E-7
 Time of random_array = 1.14855504035949713E-7
 seed size for random_number = 64
 Time of random_number (fast) = 7.74426698684692512E-8
 Time of random_number = 7.92046070098876975E-8
\end{verbatim}

mcurie (-O3)
\begin{verbatim}
 Test of random numbers
 Seed (2902248648199272781830143864736810) = 2902248648199272781830143864736810
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.54037398) = 0.54037400
1234th number (0.47829276) = 0.47829279
Zeroth number (0.54037398) = 0.54037400
1234th number (0.47829276) = 0.47829279
 Seed (3141592653589793238462643383279502) = 3141592653589793238462643383279502
 Random seed (based on current time) =              199908091420080611539
 The current time = 1999-08-09 08:06:11.539 -07:00
 Time of next_seed = 2.32298802584409724E-6
 Time of 312 * next_seed = 3.87930437922477748E-5
 Time of random_init_d2 = 1.01175603270530704E-4
 Time of random = 6.55353403091430601E-7
 Time of random_array = 5.41545057296752902E-7
 seed size for random_number = 1
 Time of random_number (fast) = 2.69431114196777343E-8
 Time of random_number = 3.42293739318847686E-8
\end{verbatim}

killeen
\begin{verbatim}
 Test of random numbers
 Seed (2902248648199272781830143864736810) = 2902248648199272781830143864736810
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.540373998032440) = 0.540373998032440
1234th number (0.478292786832260) = 0.478292786832260
Zeroth number (0.54037398) = 0.54037400
1234th number (0.47829276) = 0.47829279
Zeroth number (0.54037398) = 0.54037400
1234th number (0.47829276) = 0.47829279
 Seed (3141592653589793238462643383279502) = 3141592653589793238462643383279502
 Random seed (based on current time) =              199908091420080615738
 The current time = 1999-08-09 08:06:15.738 -07:00
 Time of next_seed = 1.896271200000005E-5
 Time of 312 * next_seed = 2.901839260000017E-4
 Time of random_init_d2 = 7.203477699999974E-4
 Time of random = 2.505549170999993E-6
 Time of random_array = 9.14024181000008E-7
 seed size for random_number = 1
 Time of random_number (fast) = 6.852060599999222E-8
 Time of random_number = 5.768296700000491E-8
\end{verbatim}

@* INDEX.
