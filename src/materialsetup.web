% $Id: 17e67dc50d9b8c5ba07532bd44be3b97dab12f24 $
\Title{materialsetup}

@* Routines used to set up the materials file.

\ID{$Id: 17e67dc50d9b8c5ba07532bd44be3b97dab12f24 $}

The materials described in the file \verb+materials_infile+ identified
in \verb+degas2.in+ are essentially just labels
which will be used in conjunction with the plasma-material interactions 
to specify how test 
species interact with non-transparent
surfaces.

Each material in \verb+materials_infile+ is described by two lines.
The first is the full name (spaces allowed); the second is a corresponding
symbol (no spaces). Note that any similarity between a material symbol and
a species symbol is treated as coincidental. The motivations for being
so general with materials while the descriptions of the species 
are so detailed is that first, the actual
composition of the first wall will likely vary significantly from one 
device to another, even if they are nominally made of the substance (e.g.,
graphite). Second, the computational description of that surface has
usually been generated by a code such as \verb+TRIM+. The precise definition
of the ``material'' used in that code is determined by the code's input file
and may not be the same that used by another code, or even another run of
the same code. Hence, the names and symbols we use for our materials in
DEGAS 2 need to be flexible to permit such variations to be distinguished.

For example,

\begin{verbatim}
carbon
C

iron
Fe

exit
Ex

mirror
mirror

molybdenum
mo
\end{verbatim}

|datasetup| packages this information into DEGAS 2 form and writes it
into the netCDF file corresponding to the symbolic name \verb+materialsfile+.

@m FILE 'materialsetup.web'

@I macros.hweb
@I readfilenames.hweb
@I materials.hweb
@I sysdep.hweb
@I string.hweb
@I netcdf.hweb

@ The unnamed module.

@a
      @<Functions and Subroutines@>

@ Read in data from \verb+materials_infile+.

@<Functions...@>=
      subroutine read_materials
      implicit_none_f77
      ma_common                       // Common
      rf_common
      implicit_none_f90

      integer length,p,b,e            // Local
      character*LINELEN line
      character*FILELEN tempfile  
      @<Memory allocation interface@>
      st_decls
      ma_num=0
      materials_version='unknown'
      tempfile = filenames_array[materials_infile]
      assert(tempfile != char_undef)
      open(unit=diskin,file=tempfile,
     $     form='formatted',status='old')
      assert( read_string(diskin,line,length) )
      assert(length<=len(line))
      materials_version=line(:length)
loop1: continue
      if (! read_string(diskin,line,length) ) goto eof
/*
   Add next material
*/
      ma_num=ma_num+1
      var_realloca(materials_name)
      var_realloca(materials_sy)
/*
   First line contains material name
*/
      length=parse_string(line(:length))
      materials_name[ma_num]=line(:length)
/*
   Second line contains symbol
*/
      assert(read_string(diskin,line,length))
      length=parse_string(line(:length))
/*
   Extract species ``symbol'' from this line
*/      
      p=0
      assert( next_token(line,b,e,p) )
      ma_sy(ma_num)=read_text(line(b:e))
/*
   And that should be it
*/
      assert( !next_token(line,b,e,p) )
      goto loop1
eof:  continue
      close(unit=diskin)
      var_reallocb(materials_name)
      var_reallocb(materials_sy)

      return
      end

@ Write out data into netcdf file \verb+materials.nc+
      
@<Functions...@>=
      subroutine nc_write_materials
      implicit_none_f77
      ma_common                 // Common
      rf_common
      implicit_none_f90
      nc_decls                 // Local
      integer fileid
      ma_ncdecl
      st_decls
      character*LINELEN description,program_version
      character* FILELEN tempfile    //local

      program_version=
     $     'DEGAS 2 Git commit: $Format:%H$, ref names: $Format:%d$'

      tempfile = filenames_array[materialsfile]
      assert(tempfile != char_undef)
      fileid = nccreate(tempfile,NC_CLOBBER,nc_stat)

      description = 'Data for materials in degas 2'
      call ncattputc(fileid,NC_GLOBAL,'description',NC_CHAR,
     $     string_length(description),
     $     description,nc_stat)

      call ncattputc(fileid,NC_GLOBAL,'data_version',NC_CHAR,
     $     string_length(materials_version),
     $     materials_version,nc_stat)
      
      call ncattputc(fileid,NC_GLOBAL,'program_version',NC_CHAR,
     $     string_length(program_version),
     $     program_version,nc_stat)
      
      ma_ncdef(fileid)
      call ncendef(fileid,nc_stat)
      ma_ncwrite(fileid)
      call ncclose(fileid,nc_stat)
      
      return
      end

@* References.

\bibliographystyle{report}
\bibliography{../../degas}

@* INDEX.

